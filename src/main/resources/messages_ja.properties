
javax.validation.constraints.AssertFalse.message = scn_vmsg_assertfalse
javax.validation.constraints.AssertTrue.message  = scn_vmsg_asserttrue
javax.validation.constraints.DecimalMax.message  = ${inclusive == true ? 'scn_vmsg_decimalmax_inclusive' : 'scn_vmsg_decimalmax_exclusive'}
javax.validation.constraints.DecimalMin.message  = ${inclusive == true ? 'scn_vmsg_decimalmin_inclusive' : 'scn_vmsg_decimalmin_exclusive'}
javax.validation.constraints.Digits.message      = numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
javax.validation.constraints.Future.message      = scn_vmsg_future
javax.validation.constraints.Max.message         = scn_vmsg_max
javax.validation.constraints.Min.message         = scn_vmsg_min
javax.validation.constraints.NotNull.message     = scn_vmsg_notnull
javax.validation.constraints.Null.message        = scn_vmsg_null
javax.validation.constraints.Past.message        = scn_vmsg_past
javax.validation.constraints.Pattern.message     = scn_vmsg_pattern
javax.validation.constraints.Size.message        = scn_vmsg_size

org.hibernate.validator.constraints.CreditCardNumber.message        = invalid credit card number
org.hibernate.validator.constraints.EAN.message                   = invalid {type} barcode
org.hibernate.validator.constraints.Email.message                   = scn_vmsg_email
org.hibernate.validator.constraints.Length.message                  = length must be between {min} and {max}
org.hibernate.validator.constraints.LuhnCheck.message               = The check digit for ${value} is invalid, Luhn Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod10Check.message              = The check digit for ${value} is invalid, Modulo 10 checksum failed
org.hibernate.validator.constraints.Mod11Check.message              = The check digit for ${value} is invalid, Modulo 11 checksum failed
org.hibernate.validator.constraints.ModCheck.message                = The check digit for ${value} is invalid, ${modType} checksum failed
org.hibernate.validator.constraints.NotBlank.message                = scn_vmsg_notblank
org.hibernate.validator.constraints.NotEmpty.message                = scn_vmsg_notempty
org.hibernate.validator.constraints.ParametersScriptAssert.message  = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.Range.message                   = must be between {min} and {max}
org.hibernate.validator.constraints.SafeHtml.message                = may have unsafe html content
org.hibernate.validator.constraints.ScriptAssert.message            = script expression "{script}" didn't evaluate to true
org.hibernate.validator.constraints.URL.message                     = scn_vmsg_url

org.hibernate.validator.constraints.br.CNPJ.message                 = invalid Brazilian corporate taxpayer registry number (CNPJ)
org.hibernate.validator.constraints.br.CPF.message                  = invalid Brazilian individual taxpayer registry number (CPF)
org.hibernate.validator.constraints.br.TituloEleitoral.message      = invalid Brazilian Voter ID card number
